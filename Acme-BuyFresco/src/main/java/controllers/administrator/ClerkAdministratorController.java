/* 
 * Autogenerated controller code.
 * Common methods code is autogenerated and commented, uncomment necessary methods and remove unnecessary ones.
 * It's recommended to check controller @RequestMapping anotation (maybe you need distinct controllers for distinct
 * actors).
 *
 */

package controllers.administrator;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import services.AdministratorService;
import services.ClerkService;
import controllers.AbstractController;
import domain.Clerk;

@Controller
@RequestMapping("/clerk/administrator")
public class ClerkAdministratorController extends AbstractController {
		
	// Supporting services ----------------------------------------------------

	@Autowired
	private AdministratorService administratorService;
	
	@Autowired
	private ClerkService clerkService;
	
	// Constructors -----------------------------------------------------------
	
	public ClerkAdministratorController() {
		super();
	}
	
	
	@RequestMapping(value = "/listClerks", method = RequestMethod.GET)
	public ModelAndView listCustomers(){
		ModelAndView result;

		Collection<Clerk> clerks;
		
		clerks = clerkService.findAll();
		
		result = new ModelAndView("clerk/list");
		result.addObject("clerks", clerks);
		result.addObject("requestURI", "clerk/administrator/listClerks.do");

		
		return result;
	}
	
	
	@RequestMapping(value = "/deactivate", method = RequestMethod.GET)
	public ModelAndView deactivateclerk(@RequestParam int clerkId){
		ModelAndView result;
		Clerk clerk;
		
		clerk = clerkService.findOne(clerkId);
		
		clerkService.deactivate(clerk);
		
		result = new ModelAndView("redirect:/clerk/administrator/listClerks.do");
		
		return result;
	}
	
	@RequestMapping(value = "/activate", method = RequestMethod.GET)
	public ModelAndView activateclerk(@RequestParam int clerkId){
		ModelAndView result;
		Clerk clerk;
		
		clerk = clerkService.findOne(clerkId);
		
		clerkService.activate(clerk);
		
		result = new ModelAndView("redirect:/clerk/administrator/listClerks.do");
		
		return result;
	}
}
