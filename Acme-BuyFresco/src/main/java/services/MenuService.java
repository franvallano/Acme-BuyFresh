/* 
* Autogenerated service code 
* Variables (text between %) must have been replaced when code is autogenerated
*/

package services;

import java.util.Collection;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;

import repositories.MenuRepository;
import domain.Menu;


@Service
@Transactional
public class MenuService {

	// Managed repository -----------------------------------------------------
	@Autowired
	private MenuRepository menuRepository;

	// Ancillary services -----------------------------------------------------
	
	AdministratorService administratorService;
	
	// Constructor ------------------------------------------------------------
	public MenuService(){
		super();
	}

	// Simple CRUD methods ----------------------------------------------------
	public Menu create(){
		
		Menu newbye;
		Date creation_moment;
		Boolean deleted = false;
		long milliseconds;

		milliseconds = System.currentTimeMillis() - 100;
		creation_moment = new Date(milliseconds);
		
		newbye = new Menu();
		
		newbye.setCreationMoment(creation_moment);
		newbye.setDeleted(deleted);
		
		return newbye;
	}

	public void save(Menu entity){
		Assert.notNull(entity);
		
		this.menuRepository.save(entity);
	}

	public void delete(Menu entity){
		Assert.isTrue(entity.getId()!=0);
		Assert.isTrue(this.menuRepository.exists(entity.getId()));
		
		entity.setDeleted(true);
		save(entity);

	}

	public Menu findOne(int id){
		Assert.isTrue(id != 0);
		
		Menu res;
		
		res = this.menuRepository.findOne(id);
		
		return res;
	}

	public Collection<Menu> findAll(){
		Collection<Menu> res;
		
		res = menuRepository.findAll();
		
		return res;
	}

	// Other business methods -------------------------------------------------

	public Collection<Menu> findActiveMenus(){
		Collection<Menu> menus;
		
		menus = menuRepository.getActiveMenus();
		
		return menus;
	}
	
	public Collection<Menu> getMenusInMoreOrders(){
		Collection<Menu> menus;
		
		menus = menuRepository.getMenusInMoreOrders();
		
		return menus;
	}
	
	public Collection<Menu> getMenusInLessOrders(){
		Collection<Menu> menus;
		
		menus = menuRepository.getMenusInLessOrders();
		
		return menus;
	}
	
	// Ancillary methods ------------------------------------------------------

}
