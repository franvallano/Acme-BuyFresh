/* 
* Autogenerated service code 
* Variables (text between %) must have been replaced when code is autogenerated
*/

package services;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;

import repositories.RecipeRepository;
import domain.Recipe;

@Service
@Transactional
public class RecipeService {

	// Managed repository -----------------------------------------------------
	@Autowired
	private RecipeRepository recipeRepository;

	// Ancillary services -----------------------------------------------------

	// Constructor ------------------------------------------------------------
	public RecipeService(){
		super();
	}

	// Simple CRUD methods ----------------------------------------------------
	public Recipe create(){
		Recipe newbye;
		
		newbye = new Recipe();
		
		return newbye;
	}

	public void save(Recipe entity){
		Assert.notNull(entity);
		
		this.recipeRepository.save(entity);
	}

	public void delete(Recipe entity){
		Assert.isTrue(entity.getId()!=0);
		Assert.isTrue(this.recipeRepository.exists(entity.getId()));
		
		this.recipeRepository.delete( entity );
		
		Assert.isTrue(!this.recipeRepository.exists(entity.getId()));
	}

	public Recipe findOne(int id){
		Assert.isTrue(id != 0);
		
		Recipe res;
		
		res = this.recipeRepository.findOne(id);
		
		return res;
	}

	public Collection<Recipe> findAll(){
		Collection<Recipe> res;
		
		res = recipeRepository.findAll();
		
		return res;
	}

	// Other business methods -------------------------------------------------

	
	public Collection<Recipe> getRecipesByIngredients(String nameIngredient){
		Collection<Recipe> res;
		
		res = recipeRepository.getRecipesByIngredients(nameIngredient);
		
		return res;
	}
	
	// Ancillary methods ------------------------------------------------------

}
